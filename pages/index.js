import { collection, doc, getDocs, onSnapshot, orderBy, query } from "firebase/firestore";
import Head from "next/head";
import { useEffect } from "react";

import { useCollectionData } from "react-firebase-hooks/firestore";
import PostFeed from "../comps/PostFeed";
import { auth, db } from "../lib/firebase";
import { useAuthState } from "react-firebase-hooks/auth";
import { useState } from "react";

export default function Home() {
  const [user] = useAuthState(auth);
  const [allPosts, setAllPosts] = useState([]);
  

  const getPosts = async () => {
    const collectionRef = collection(db, "posts");
    const q = query(collectionRef, orderBy("timestamp", "desc"));
    const unsubscribe = onSnapshot(q, (snapshot) => {
      setAllPosts(snapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id })));
    });
    return unsubscribe;
  };
  useEffect(() => {
    getPosts();

    // rerun when user is present
  }, [user]);
  return (
    <>
      <Head>
        <title>Hot Take</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" hrefnpm="/favicon.ico" />
      </Head>
      <main>
        <PostFeed posts={allPosts} />
      </main>
    </>
  );
}
